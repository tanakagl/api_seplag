version: '3.8'

services:
  # Serviço da aplicação Laravel
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api_seplag_app
    restart: unless-stopped
    working_dir: /var/www/html
    environment:
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      APP_URL: ${APP_URL}
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: postgres
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      FILESYSTEM_DISK: ${FILESYSTEM_DISK}
      MINIO_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY_ID}
      MINIO_SECRET_ACCESS_KEY: ${MINIO_SECRET_ACCESS_KEY}
      MINIO_DEFAULT_REGION: ${MINIO_DEFAULT_REGION}
      MINIO_BUCKET: ${MINIO_BUCKET}
      MINIO_URL: ${MINIO_URL}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_USE_PATH_STYLE_ENDPOINT: ${MINIO_USE_PATH_STYLE_ENDPOINT}
    volumes:
      - ./:/var/www/html
    ports:
      - "5173:5173"
      - "8000:8000"
      - "9003:9003"
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - api_seplag_network

  # Servidor de banco de dados PostgreSQL
  postgres:
    image: postgres:latest
    container_name: api_seplag_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - api_seplag_network

  # Serviço Minio para armazenamento de arquivos
  minio:
    image: minio/minio:latest
    container_name: api_seplag_minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_ACCESS_KEY}
    volumes:
      - minio-data:/data
    networks:
      - api_seplag_network
    command: ["server", "/data", "--console-address", ":9001"]

  # Serviço Redis para cache e sessões
  redis:
    image: redis:alpine
    container_name: api_seplag_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - api_seplag_network
    volumes:
      - redis-data:/data

volumes:
  postgres-data:
  minio-data:
  redis-data:

networks:
  api_seplag_network:
    driver: bridge